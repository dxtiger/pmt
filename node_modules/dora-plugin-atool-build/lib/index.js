'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _mergeCustomConfig = require('atool-build/lib/mergeCustomConfig');

var _mergeCustomConfig2 = _interopRequireDefault(_mergeCustomConfig);

var _getWebpackCommonConfig = require('atool-build/lib/getWebpackCommonConfig');

var _getWebpackCommonConfig2 = _interopRequireDefault(_getWebpackCommonConfig);

var _webpack = require('atool-build/lib/webpack');

var _webpack2 = _interopRequireDefault(_webpack);

var _path = require('path');

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var webpackConfig = undefined;

exports.default = {

  'middleware.before': function middlewareBefore(args) {
    var cwd = args.cwd;
    var applyPlugins = args.applyPlugins;
    var query = args.query;

    var customConfigPath = (0, _path.join)(cwd, query.config || 'webpack.config.js');
    webpackConfig = (0, _mergeCustomConfig2.default)((0, _getWebpackCommonConfig2.default)(args), customConfigPath, 'development');
    webpackConfig.devtool = '#source-map';

    webpackConfig.plugins.push(new _webpack.ProgressPlugin(function (percentage, msg) {
      var stream = process.stderr;
      if (stream.isTTY && percentage < 0.71) {
        stream.cursorTo(0);
        stream.write('ðŸ“¦  ' + _chalk2.default.magenta(msg));
        stream.clearLine(1);
      } else if (percentage === 1) {
        console.log(_chalk2.default.green('\nwebpack: bundle build is now finished.'));
      }
    }));

    webpackConfig = applyPlugins('atool-build.updateWebpackConfig', webpackConfig);
  },

  middleware: function middleware(args) {
    var _args$query = args.query;
    var publicPath = _args$query.publicPath;
    var verbose = _args$query.verbose;
    // export compiler with global temporarily

    var compiler = global.g_dora_plugin_atool_build_compiler = (0, _webpack2.default)(webpackConfig);
    compiler.plugin('done', function doneHandler(stats) {
      if (verbose || stats.hasErrors()) {
        console.log(stats.toString({ colors: true }));
      }
    });
    return require('koa-webpack-dev-middleware')(compiler, {
      publicPath: publicPath || '/',
      quiet: true
    });
  }
};
module.exports = exports['default'];